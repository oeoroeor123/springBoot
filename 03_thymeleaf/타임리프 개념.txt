* Thymeleaf
1. View Template Engine
2. 서버에서 클라이언트에게 응답할 브라우저 화면을 만드는 역할을 수행한다.
3. 기존 HTML 코드와 구조를 그대로 사용하는 Natural Templates 방식을 사용한다.


* Spring Boot와 Thymeleaf
1. 스프링 부트가 채택한 표준 View Template Engine
2. Thymeleaf 디펜던시만 추가하면 바로 사용할 수 있다.


* th 속성 사용을 위한 네임스페이스 추가
- th 속성 사용 시, 앞에 th:를 붙여야 함
<html xmlns:th="http://www.thymeleaf.org">


* 타임리프 주석
1. <!--/* */-->
2. 브라우저 화면에서는 확인 불가


* 타임리프 주요 표현식
1. Link URL Expression
   1) 경로 작성 시 사용
   2) 형식 : @{}
   3) 활용 예시
    ① <img th:src="@{/경로}">
    ② <a th:href="@{/경로}">
    ③ <form th:action="@{/경로}">

2. Value Expression
   1) 값을 나타날 때 사용
   2) 형식 : ${}
   3) 영역 구분
    ① 세션에 저장된 값 : ${session.값}
    ② 애플리케이션에 저장된 값 : ${application.값}
   4) th 속성
    ① th:text="${텍스트}"
    ② th:utext="${HTML요소}"

3. Selection Variable Expression
   1) 객체와 필드를 구분해서 작성할 때 사용
   2) 형식
      <form th:object="${객체}">
       <input th:field="*{필드}">
       <textarea th:text="*{필드}">
      </form>      
      
      
* 타임리프 주요 제어문
1. 분기문
  1) if
  2) 형식
    ① <태그 th:if="${조건식}"></태그>
    ② <th:block th:if="${조건식}"></th:block>
  3) else
  4) 형식
    ① <태그 th:unless="${조건식}"></태그>
    ② <th:block th:if="${조건식}"></th:block>

2. 반복문
  1) 배열 또는 리스트를 순회할 수 있다.
  2) 형식
   ① <태그 th:each="변수:${배열/리스트}">
          ${변수}
       </태그>
   ② <태그 th:each="변수, rowStat:${배열/리스트}">
          ${변수}, ${rowStat.index}, ${rowStat.count}
       </태그>


* 타임리프 주요 유틸리티 객체
1. #lists
  1) 리스트를 의미
  2) 주요 사용법
    ① ${#lists.size(list)}                  : 요소의 개수 반환
    ② ${#lists.isEmpty(list)}             : 요소가 없으면 true 반환
    ③ ${#lists.contains(list, element)} : element 가 있으면 true 반환

2. #arrays
  1) 배열을 의미
  2) 주요 사용법
    ① ${#arrays.length(array)}               : 요소의 개수 반환
    ② ${#arrays.isEmpty(array)}             : 요소가 없으면 true 반환
    ③ ${#arrays.contains(array, element)} : element 가 있으면 true 반환

3. #dates
  1) java.util.Date 를 의미
  2) 관련 타입을 가진 데이터의 형식을 변환할 수 있음
  3) 원하는 단위의 값을 추출할 수 있음
  4) 주요 사용법
    ① ${#dates.format(date, 'pattern')} : pattern 지정된 date 반환
    ② ${#dates.year(date)}                : 년도 반환
    ③ ${#dates.month(date)}             : 월 반환(1~12)
    ④ ${#dates.day(date)}                 : 일 반환(1~31)
    (5) ${#dates.hour(date)}               : 시 반환(0~23)
    (6) ${#dates.minute(date)}            : 분 반환(0~59)
    (7) ${#dates.second(date)}            : 초 반환(0~59)